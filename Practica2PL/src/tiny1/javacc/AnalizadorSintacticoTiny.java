/* Generated By:tiny1.javacc: Do not edit this line. AnalizadorSintacticoTiny.java */
package tiny1.javacc;

public class AnalizadorSintacticoTiny implements AnalizadorSintacticoTinyConstants {

  final public void ProgramaP() throws ParseException {
    Programa();
    jj_consume_token(0);
  }

  final public void Programa() throws ParseException {
    switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {
    case proc:
    case var:
    case type:
      Declaraciones();
      jj_consume_token(46);
      Instrucciones();
      break;
    case numeroEntero:
    case numeroReal:
    case True:
    case False:
    case not:
    case Null:
    case If:
    case While:
    case call:
    case New:
    case delete:
    case read:
    case write:
    case nl:
    case identificador:
    case cadena:
    case 48:
    case 54:
    case 58:
    case 59:
      Instrucciones();
      break;
    default:
      jj_la1[0] = jj_gen;
      jj_consume_token(-1);
      throw new ParseException();
    }
  }

  final public void Declaraciones() throws ParseException {
    Declaracion();
    REDeclaraciones();
  }

  final public void REDeclaraciones() throws ParseException {
    switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {
    case 47:
      jj_consume_token(47);
      Declaracion();
      REDeclaraciones();
      break;
    default:
      jj_la1[1] = jj_gen;

    }
  }

  final public void Declaracion() throws ParseException {
    switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {
    case var:
      jj_consume_token(var);
      Tipo();
      jj_consume_token(identificador);
      break;
    case type:
      jj_consume_token(type);
      Tipo();
      jj_consume_token(identificador);
      break;
    case proc:
      jj_consume_token(proc);
      jj_consume_token(identificador);
      Params();
      Bloque();
      break;
    default:
      jj_la1[2] = jj_gen;
      jj_consume_token(-1);
      throw new ParseException();
    }
  }

  final public void Params() throws ParseException {
    jj_consume_token(48);
    REParams();
  }

  final public void REParams() throws ParseException {
    switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {
    case Int:
    case bool:
    case real:
    case string:
    case record:
    case array:
    case pointer:
    case identificador:
      ListaParams();
      jj_consume_token(49);
      break;
    case 49:
      jj_consume_token(49);
      break;
    default:
      jj_la1[3] = jj_gen;
      jj_consume_token(-1);
      throw new ParseException();
    }
  }

  final public void ListaParams() throws ParseException {
    Param();
    REListaParams();
  }

  final public void REListaParams() throws ParseException {
    switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {
    case 50:
      jj_consume_token(50);
      Param();
      REListaParams();
      break;
    default:
      jj_la1[4] = jj_gen;

    }
  }

  final public void Param() throws ParseException {
    Tipo();
    AmpersandOp();
    jj_consume_token(identificador);
  }

  final public void AmpersandOp() throws ParseException {
    switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {
    case 51:
      jj_consume_token(51);
      break;
    default:
      jj_la1[5] = jj_gen;

    }
  }

  final public void Tipo() throws ParseException {
    switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {
    case Int:
      jj_consume_token(Int);
      break;
    case real:
      jj_consume_token(real);
      break;
    case bool:
      jj_consume_token(bool);
      break;
    case string:
      jj_consume_token(string);
      break;
    case identificador:
      jj_consume_token(identificador);
      break;
    case array:
      jj_consume_token(array);
      jj_consume_token(52);
      jj_consume_token(numeroEntero);
      jj_consume_token(53);
      jj_consume_token(of);
      Tipo();
      break;
    case pointer:
      jj_consume_token(pointer);
      Tipo();
      break;
    case record:
      jj_consume_token(record);
      jj_consume_token(54);
      Campos();
      jj_consume_token(55);
      break;
    default:
      jj_la1[6] = jj_gen;
      jj_consume_token(-1);
      throw new ParseException();
    }
  }

  final public void Campos() throws ParseException {
    Campo();
    RECampos();
  }

  final public void RECampos() throws ParseException {
    switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {
    case 47:
      jj_consume_token(47);
      Campo();
      RECampos();
      break;
    default:
      jj_la1[7] = jj_gen;

    }
  }

  final public void Campo() throws ParseException {
    Tipo();
    jj_consume_token(identificador);
  }

  final public void Instrucciones() throws ParseException {
    Instruccion();
    REInstrucciones();
  }

  final public void REInstrucciones() throws ParseException {
    switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {
    case 47:
      jj_consume_token(47);
      Instruccion();
      REInstrucciones();
      break;
    default:
      jj_la1[8] = jj_gen;

    }
  }

  final public void InstruccionesOpt() throws ParseException {
    switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {
    case numeroEntero:
    case numeroReal:
    case True:
    case False:
    case not:
    case Null:
    case If:
    case While:
    case call:
    case New:
    case delete:
    case read:
    case write:
    case nl:
    case identificador:
    case cadena:
    case 48:
    case 54:
    case 58:
    case 59:
      Instrucciones();
      break;
    default:
      jj_la1[9] = jj_gen;

    }
  }

  final public void Instruccion() throws ParseException {
    switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {
    case numeroEntero:
    case numeroReal:
    case True:
    case False:
    case not:
    case Null:
    case identificador:
    case cadena:
    case 48:
    case 58:
    case 59:
      Expresion();
      jj_consume_token(56);
      Expresion();
      break;
    case If:
      jj_consume_token(If);
      Expresion();
      jj_consume_token(then);
      InstruccionesOpt();
      REInstruccion();
      break;
    case While:
      jj_consume_token(While);
      Expresion();
      jj_consume_token(Do);
      InstruccionesOpt();
      jj_consume_token(endwhile);
      break;
    case read:
      jj_consume_token(read);
      Expresion();
      break;
    case write:
      jj_consume_token(write);
      Expresion();
      break;
    case nl:
      jj_consume_token(nl);
      break;
    case New:
      jj_consume_token(New);
      Expresion();
      break;
    case delete:
      jj_consume_token(delete);
      Expresion();
      break;
    case call:
      jj_consume_token(call);
      jj_consume_token(identificador);
      ParamReal();
      break;
    case 54:
      Bloque();
      break;
    default:
      jj_la1[10] = jj_gen;
      jj_consume_token(-1);
      throw new ParseException();
    }
  }

  final public void REInstruccion() throws ParseException {
    switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {
    case Else:
      jj_consume_token(Else);
      InstruccionesOpt();
      jj_consume_token(endif);
      break;
    case endif:
      jj_consume_token(endif);
      break;
    default:
      jj_la1[11] = jj_gen;
      jj_consume_token(-1);
      throw new ParseException();
    }
  }

  final public void ParamReal() throws ParseException {
    jj_consume_token(48);
    REParamReal();
  }

  final public void REParamReal() throws ParseException {
    switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {
    case 49:
      jj_consume_token(49);
      break;
    case numeroEntero:
    case numeroReal:
    case True:
    case False:
    case not:
    case Null:
    case identificador:
    case cadena:
    case 48:
    case 58:
    case 59:
      Expresiones();
      jj_consume_token(49);
      break;
    default:
      jj_la1[12] = jj_gen;
      jj_consume_token(-1);
      throw new ParseException();
    }
  }

  final public void Expresiones() throws ParseException {
    Expresion();
    REExpresiones();
  }

  final public void REExpresiones() throws ParseException {
    switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {
    case 50:
      jj_consume_token(50);
      Expresion();
      REExpresiones();
      break;
    default:
      jj_la1[13] = jj_gen;

    }
  }

  final public void Bloque() throws ParseException {
    jj_consume_token(54);
    REBloque();
  }

  final public void REBloque() throws ParseException {
    switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {
    case 55:
      jj_consume_token(55);
      break;
    case numeroEntero:
    case numeroReal:
    case True:
    case False:
    case not:
    case Null:
    case proc:
    case If:
    case While:
    case call:
    case New:
    case delete:
    case read:
    case write:
    case nl:
    case var:
    case type:
    case identificador:
    case cadena:
    case 48:
    case 54:
    case 58:
    case 59:
      Programa();
      jj_consume_token(55);
      break;
    default:
      jj_la1[14] = jj_gen;
      jj_consume_token(-1);
      throw new ParseException();
    }
  }

  final public void Expresion() throws ParseException {
    E0();
  }

  final public void ExpresionBasica() throws ParseException {
    switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {
    case numeroEntero:
      jj_consume_token(numeroEntero);
      break;
    case numeroReal:
      jj_consume_token(numeroReal);
      break;
    case identificador:
      jj_consume_token(identificador);
      break;
    case True:
      jj_consume_token(True);
      break;
    case False:
      jj_consume_token(False);
      break;
    case Null:
      jj_consume_token(Null);
      break;
    case cadena:
      jj_consume_token(cadena);
      break;
    default:
      jj_la1[15] = jj_gen;
      jj_consume_token(-1);
      throw new ParseException();
    }
  }

  final public void E0() throws ParseException {
    E1();
    RE0();
  }

  final public void RE0() throws ParseException {
    switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {
    case 57:
      jj_consume_token(57);
      E0();
      break;
    case 58:
      jj_consume_token(58);
      E1();
      break;
    default:
      jj_la1[16] = jj_gen;

    }
  }

  final public void E1() throws ParseException {
    E2();
    RE1();
  }

  final public void RE1() throws ParseException {
    switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {
    case or:
    case and:
      OP1();
      E2();
      RE1();
      break;
    default:
      jj_la1[17] = jj_gen;

    }
  }

  final public void E2() throws ParseException {
    E3();
    RE2();
  }

  final public void RE2() throws ParseException {
    switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {
    case 60:
    case 61:
    case 62:
    case 63:
    case 64:
    case 65:
      OP2();
      E3();
      RE2();
      break;
    default:
      jj_la1[18] = jj_gen;

    }
  }

  final public void E3() throws ParseException {
    E4();
    RE3();
  }

  final public void RE3() throws ParseException {
    switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {
    case 59:
    case 66:
    case 67:
      OP3();
      E4();
      break;
    default:
      jj_la1[19] = jj_gen;

    }
  }

  final public void E4() throws ParseException {
    switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {
    case not:
      jj_consume_token(not);
      E4();
      break;
    case 58:
      jj_consume_token(58);
      E5();
      break;
    case numeroEntero:
    case numeroReal:
    case True:
    case False:
    case Null:
    case identificador:
    case cadena:
    case 48:
    case 59:
      E5();
      break;
    default:
      jj_la1[20] = jj_gen;
      jj_consume_token(-1);
      throw new ParseException();
    }
  }

  final public void E5() throws ParseException {
    E6();
    RE5p();
  }

  final public void RE5p() throws ParseException {
    switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {
    case 52:
    case 68:
    case 69:
      RE5();
      RE5p();
      break;
    default:
      jj_la1[21] = jj_gen;

    }
  }

  final public void RE5() throws ParseException {
    switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {
    case 52:
      jj_consume_token(52);
      Expresion();
      jj_consume_token(53);
      break;
    case 68:
    case 69:
      OP5();
      break;
    default:
      jj_la1[22] = jj_gen;
      jj_consume_token(-1);
      throw new ParseException();
    }
  }

  final public void E6() throws ParseException {
    switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {
    case 59:
      jj_consume_token(59);
      E6();
      break;
    case numeroEntero:
    case numeroReal:
    case True:
    case False:
    case Null:
    case identificador:
    case cadena:
    case 48:
      E7();
      break;
    default:
      jj_la1[23] = jj_gen;
      jj_consume_token(-1);
      throw new ParseException();
    }
  }

  final public void E7() throws ParseException {
    switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {
    case 48:
      jj_consume_token(48);
      E0();
      jj_consume_token(49);
      break;
    case numeroEntero:
    case numeroReal:
    case True:
    case False:
    case Null:
    case identificador:
    case cadena:
      ExpresionBasica();
      break;
    default:
      jj_la1[24] = jj_gen;
      jj_consume_token(-1);
      throw new ParseException();
    }
  }

  final public void OP1() throws ParseException {
    switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {
    case and:
      jj_consume_token(and);
      break;
    case or:
      jj_consume_token(or);
      break;
    default:
      jj_la1[25] = jj_gen;
      jj_consume_token(-1);
      throw new ParseException();
    }
  }

  final public void OP2() throws ParseException {
    switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {
    case 60:
      jj_consume_token(60);
      break;
    case 61:
      jj_consume_token(61);
      break;
    case 62:
      jj_consume_token(62);
      break;
    case 63:
      jj_consume_token(63);
      break;
    case 64:
      jj_consume_token(64);
      break;
    case 65:
      jj_consume_token(65);
      break;
    default:
      jj_la1[26] = jj_gen;
      jj_consume_token(-1);
      throw new ParseException();
    }
  }

  final public void OP3() throws ParseException {
    switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {
    case 59:
      jj_consume_token(59);
      break;
    case 66:
      jj_consume_token(66);
      break;
    case 67:
      jj_consume_token(67);
      break;
    default:
      jj_la1[27] = jj_gen;
      jj_consume_token(-1);
      throw new ParseException();
    }
  }

  final public void OP5() throws ParseException {
    switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {
    case 68:
      jj_consume_token(68);
      jj_consume_token(identificador);
      break;
    case 69:
      jj_consume_token(69);
      jj_consume_token(identificador);
      break;
    default:
      jj_la1[28] = jj_gen;
      jj_consume_token(-1);
      throw new ParseException();
    }
  }

  public AnalizadorSintacticoTinyTokenManager token_source;
  SimpleCharStream jj_input_stream;
  public Token token, jj_nt;
  private int jj_ntk;
  private int jj_gen;
  final private int[] jj_la1 = new int[29];
  static private int[] jj_la1_0;
  static private int[] jj_la1_1;
  static private int[] jj_la1_2;
  static {
      jj_la1_0();
      jj_la1_1();
      jj_la1_2();
   }
   private static void jj_la1_0() {
      jj_la1_0 = new int[] {0x23a63000,0x0,0x1000000,0x41c000,0x0,0x0,0x41c000,0x0,0x0,0x22a63000,0x22a63000,0x18000000,0xa63000,0x0,0x23a63000,0x863000,0x0,0x180000,0x0,0x0,0xa63000,0x0,0x0,0x863000,0x863000,0x180000,0x0,0x0,0x0,};
   }
   private static void jj_la1_1() {
      jj_la1_1 = new int[] {0xc413fe1,0x8000,0xc00,0x21016,0x40000,0x80000,0x1016,0x8000,0x8000,0xc4133e1,0xc4133e1,0x0,0xc033000,0x40000,0xcc13fe1,0x3000,0x6000000,0x0,0xf0000000,0x8000000,0xc013000,0x100000,0x100000,0x8013000,0x13000,0x0,0xf0000000,0x8000000,0x0,};
   }
   private static void jj_la1_2() {
      jj_la1_2 = new int[] {0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x3,0xc,0x0,0x30,0x30,0x0,0x0,0x0,0x3,0xc,0x30,};
   }

  public AnalizadorSintacticoTiny(java.io.InputStream stream) {
    jj_input_stream = new SimpleCharStream(stream, 1, 1);
    token_source = new AnalizadorSintacticoTinyTokenManager(jj_input_stream);
    token = new Token();
    jj_ntk = -1;
    jj_gen = 0;
    for (int i = 0; i < 29; i++) jj_la1[i] = -1;
  }

  public void ReInit(java.io.InputStream stream) {
    jj_input_stream.ReInit(stream, 1, 1);
    token_source.ReInit(jj_input_stream);
    token = new Token();
    jj_ntk = -1;
    jj_gen = 0;
    for (int i = 0; i < 29; i++) jj_la1[i] = -1;
  }

  public AnalizadorSintacticoTiny(java.io.Reader stream) {
    jj_input_stream = new SimpleCharStream(stream, 1, 1);
    token_source = new AnalizadorSintacticoTinyTokenManager(jj_input_stream);
    token = new Token();
    jj_ntk = -1;
    jj_gen = 0;
    for (int i = 0; i < 29; i++) jj_la1[i] = -1;
  }

  public void ReInit(java.io.Reader stream) {
    jj_input_stream.ReInit(stream, 1, 1);
    token_source.ReInit(jj_input_stream);
    token = new Token();
    jj_ntk = -1;
    jj_gen = 0;
    for (int i = 0; i < 29; i++) jj_la1[i] = -1;
  }

  public AnalizadorSintacticoTiny(AnalizadorSintacticoTinyTokenManager tm) {
    token_source = tm;
    token = new Token();
    jj_ntk = -1;
    jj_gen = 0;
    for (int i = 0; i < 29; i++) jj_la1[i] = -1;
  }

  public void ReInit(AnalizadorSintacticoTinyTokenManager tm) {
    token_source = tm;
    token = new Token();
    jj_ntk = -1;
    jj_gen = 0;
    for (int i = 0; i < 29; i++) jj_la1[i] = -1;
  }

  final private Token jj_consume_token(int kind) throws ParseException {
    Token oldToken;
    if ((oldToken = token).next != null) token = token.next;
    else token = token.next = token_source.getNextToken();
    jj_ntk = -1;
    if (token.kind == kind) {
      jj_gen++;
      return token;
    }
    token = oldToken;
    jj_kind = kind;
    throw generateParseException();
  }

  final public Token getNextToken() {
    if (token.next != null) token = token.next;
    else token = token.next = token_source.getNextToken();
    jj_ntk = -1;
    jj_gen++;
    return token;
  }

  final public Token getToken(int index) {
    Token t = token;
    for (int i = 0; i < index; i++) {
      if (t.next != null) t = t.next;
      else t = t.next = token_source.getNextToken();
    }
    return t;
  }

  final private int jj_ntk() {
    if ((jj_nt=token.next) == null)
      return (jj_ntk = (token.next=token_source.getNextToken()).kind);
    else
      return (jj_ntk = jj_nt.kind);
  }

  private java.util.Vector jj_expentries = new java.util.Vector();
  private int[] jj_expentry;
  private int jj_kind = -1;

  public ParseException generateParseException() {
    jj_expentries.removeAllElements();
    boolean[] la1tokens = new boolean[70];
    for (int i = 0; i < 70; i++) {
      la1tokens[i] = false;
    }
    if (jj_kind >= 0) {
      la1tokens[jj_kind] = true;
      jj_kind = -1;
    }
    for (int i = 0; i < 29; i++) {
      if (jj_la1[i] == jj_gen) {
        for (int j = 0; j < 32; j++) {
          if ((jj_la1_0[i] & (1<<j)) != 0) {
            la1tokens[j] = true;
          }
          if ((jj_la1_1[i] & (1<<j)) != 0) {
            la1tokens[32+j] = true;
          }
          if ((jj_la1_2[i] & (1<<j)) != 0) {
            la1tokens[64+j] = true;
          }
        }
      }
    }
    for (int i = 0; i < 70; i++) {
      if (la1tokens[i]) {
        jj_expentry = new int[1];
        jj_expentry[0] = i;
        jj_expentries.addElement(jj_expentry);
      }
    }
    int[][] exptokseq = new int[jj_expentries.size()][];
    for (int i = 0; i < jj_expentries.size(); i++) {
      exptokseq[i] = (int[])jj_expentries.elementAt(i);
    }
    return new ParseException(token, exptokseq, tokenImage);
  }

  final public void enable_tracing() {
  }

  final public void disable_tracing() {
  }

                                       }
